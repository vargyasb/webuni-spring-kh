
package hu.webuni.airport.wsclient;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "AirportXmlWsImplService", targetNamespace = "http://xmlws.airport.webuni.hu/", wsdlLocation = "http://localhost:8080/services/airport?wsdl")
public class AirportXmlWsImplService
    extends Service
{

    private final static URL AIRPORTXMLWSIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException AIRPORTXMLWSIMPLSERVICE_EXCEPTION;
    private final static QName AIRPORTXMLWSIMPLSERVICE_QNAME = new QName("http://xmlws.airport.webuni.hu/", "AirportXmlWsImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/services/airport?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        AIRPORTXMLWSIMPLSERVICE_WSDL_LOCATION = url;
        AIRPORTXMLWSIMPLSERVICE_EXCEPTION = e;
    }

    public AirportXmlWsImplService() {
        super(__getWsdlLocation(), AIRPORTXMLWSIMPLSERVICE_QNAME);
    }

    public AirportXmlWsImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), AIRPORTXMLWSIMPLSERVICE_QNAME, features);
    }

    public AirportXmlWsImplService(URL wsdlLocation) {
        super(wsdlLocation, AIRPORTXMLWSIMPLSERVICE_QNAME);
    }

    public AirportXmlWsImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, AIRPORTXMLWSIMPLSERVICE_QNAME, features);
    }

    public AirportXmlWsImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AirportXmlWsImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns AirportXmlWs
     */
    @WebEndpoint(name = "AirportXmlWsImplPort")
    public AirportXmlWs getAirportXmlWsImplPort() {
        return super.getPort(new QName("http://xmlws.airport.webuni.hu/", "AirportXmlWsImplPort"), AirportXmlWs.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirportXmlWs
     */
    @WebEndpoint(name = "AirportXmlWsImplPort")
    public AirportXmlWs getAirportXmlWsImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://xmlws.airport.webuni.hu/", "AirportXmlWsImplPort"), AirportXmlWs.class, features);
    }

    private static URL __getWsdlLocation() {
        if (AIRPORTXMLWSIMPLSERVICE_EXCEPTION!= null) {
            throw AIRPORTXMLWSIMPLSERVICE_EXCEPTION;
        }
        return AIRPORTXMLWSIMPLSERVICE_WSDL_LOCATION;
    }

}
